<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>TravelPlan</groupId>
    <artifactId>TravelPlan</artifactId>
    <version>1.0.0</version>
     
	<properties>
		<spring.version>3.0.5.RELEASE</spring.version>
	</properties>
	
    <dependencies>      
	 
	   <!-- Spring 3 dependencies -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>			
		</dependency>
			
		<dependency>	
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>	
		
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.version}</version>
		</dependency>		
		
		<!-- Spring Security -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${spring.version}</version>
		</dependency>		
	 
		<!-- JSTL --> 
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.1.2</version>
		</dependency>
	 
		<dependency>
			<groupId>taglibs</groupId>
			<artifactId>standard</artifactId>
			<version>1.1.2</version>
		</dependency>
	 
		<!-- for compile only, your container should have this -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
		 
		<dependency>
            <groupId>javax.persistence</groupId>
            <artifactId>persistence-api</artifactId>
            <version>1.0</version>
        </dependency>
        
        <!-- Hibernate database driver -->
   <!--     <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>4.1.7.Final</version>
        </dependency>
        
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-annotations</artifactId>
            <version>3.5.6-Final</version>
        </dependency>
        
          <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-commons-annotations</artifactId>
            <version>3.3.0.ga</version>
        </dependency>
     -->
     
	    <dependency>
	    	<groupId>org.hibernate</groupId>
	    	<artifactId>hibernate-core</artifactId>
	    	<version>3.3.2.GA</version>
	    </dependency>
	    <dependency>
	    	<groupId>org.hibernate</groupId>
	    	<artifactId>hibernate-annotations</artifactId>
	    	<version>3.4.0.GA</version>
	    </dependency>
         
       <!-- Transaction support --> 
       <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>${spring.version}</version>
        </dependency> 
        
        <!--  PostgreSQL -->
        <dependency>
			<groupId>postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>9.1-901.jdbc4</version>
		</dependency>
		
		<!-- SLF4j logging implementation (failed without it) -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.5.6</version>
		</dependency>		
		
		<!-- Allow to define a new class at runtime and 
		     to modify a class file when the JVM loads it -->
		
		<dependency>
			<groupId>javassist</groupId>
			<artifactId>javassist</artifactId>
			<version>3.12.1.GA</version>
		</dependency>
		
		<dependency>
    		<groupId>cglib</groupId>
			<artifactId>cglib</artifactId>
			<version>2.2</version>
    	</dependency>	
    	
    	<!-- JSF -->
    	<dependency>
			<groupId>com.sun.faces</groupId>
			<artifactId>jsf-api</artifactId>
			<version>2.1.13</version>
		</dependency>
		
		<dependency>
			<groupId>com.sun.faces</groupId>
			<artifactId>jsf-impl</artifactId>
			<version>2.1.13</version>
		</dependency>
		
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.1</version>
		</dependency>	
		
		<dependency>
        	<groupId>org.springframework.webflow</groupId>
        	<artifactId>org.springframework.faces</artifactId>
        	<version>2.0.0.RELEASE</version>
      	</dependency>	
                                   
    </dependencies>
    
  	<build>
		<finalName>TravelPlan</finalName>
		<plugins>
		
        	<plugin>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.1.1</version>
                <configuration>
                    <packagingExcludes>WEB-INF/web.xml</packagingExcludes>
                </configuration>
            </plugin>
            
    <!-- Tomcat maven plugin, create it's own instance of tomcat, not so good as cargo   
           <plugin>
        		<groupId>org.apache.tomcat.maven</groupId>
        		<artifactId>tomcat7-maven-plugin</artifactId>
        		<version>2.0</version>
        		<configuration>
                	<warFile>${project.build.directory}/${project.build.finalName}.war</warFile>
                	<url>http://localhost:8080/manager/html</url>
                	<server>TomcatServer</server>
                	<path>/TravelPlan</path>
        		</configuration>
			</plugin>
	-->
		<plugin>
				<groupId>org.codehaus.cargo</groupId>
				<artifactId>cargo-maven2-plugin</artifactId>
			<configuration>
					<container>
						<containerId>tomcat7x</containerId>
						<type>remote</type>
					</container>
				<configuration>
					<type>runtime</type>
					<properties>
						<cargo.tomcat.manager.url>http://localhost:8080/manager</cargo.tomcat.manager.url>
						<cargo.remote.username>admin</cargo.remote.username>
						<cargo.remote.password>123</cargo.remote.password>
					</properties>
				</configuration>
				<deployer>
					<type>remote</type>
					<deployables>
						<deployable>
							<groupId>${project.groupId}</groupId>
							<artifactId>${project.artifactId}</artifactId>
							<type>war</type>
						</deployable>
					</deployables>
				</deployer>
		</configuration>
	 </plugin>
    	
	</plugins>	
</build>
<packaging>war</packaging>
</project>
