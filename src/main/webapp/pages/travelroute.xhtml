<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" 
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"   
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:rich="http://richfaces.org/rich"
      xmlns:a4j="http://richfaces.org/a4j"
      xmlns:c="http://java.sun.com/jsp/jstl/core" >
    <h:head>
        <h:outputStylesheet name="css/table-style.css"  />
    	<h:outputStylesheet name="css/loginhead-style.css"  /> 
    	<h:outputStylesheet name="css/map-style.css"  /> 
    	
 		<script src="https://maps.googleapis.com/maps/api/js?v=3.exp&amp;sensor=false&amp;libraries=places"></script>

    <script type="text/javascript">
    function getLatLng( address ) {
        var geocoder = new google.maps.Geocoder();
        geocoder.geocode( { 'address' : address }, function( results, status ) {
            if ( status == google.maps.GeocoderStatus.OK ) {
                var mapLat = document.getElementById( 'edlatitude' ); // hidden field 
                var mapLg = document.getElementById( 'edLongitude' ); // hidden field 
                mapLat.value = results[0].geometry.location.lat();
                mapLg.value = results[0].geometry.location.lng();
            } else {
                alert( "Geocode was not successful for the following reason: " + status );
            }
        });            
    }
    
      var map;
      var directionsDisplay;
    
      function initialize() {    
          var mapOptions = {
                  center: new google.maps.LatLng(#{travelRouteBean.latitude}, #{travelRouteBean.longitude}),
                  zoom: 13,
                  mapTypeId: google.maps.MapTypeId.ROADMAP
                };

          map = new google.maps.Map(document.getElementById('map_canvas'), mapOptions);      
          var input = document.getElementById('searchTextField');
          var autocomplete = new google.maps.places.Autocomplete(input);

          autocomplete.bindTo('bounds', map);

          var infowindow = new google.maps.InfoWindow();
          var marker = new google.maps.Marker({ map: map });

          google.maps.event.addListener(autocomplete, 'place_changed', function() {
        	  
        	//if route is exist, disable it  
        	directionsDisplay.setMap(null);  
        	//travelRouteBean.setRouteView(false)
        	//document.getElementById("test").value = myJsValue;
            infowindow.close();
            marker.setVisible(false);
            input.className = '';
            var mapplace = autocomplete.getPlace();
            if (!mapplace.geometry) {
              // Inform the user that the place was not found and return.
              input.className = 'notfound';
              return;
            }
            // If the place has a geometry, then present it on a map.
            if (mapplace.geometry.viewport) {
              map.fitBounds(mapplace.geometry.viewport);
            } else {
              map.setCenter(mapplace.geometry.location);
              map.setZoom(17);
            }
            
            var image = new google.maps.MarkerImage(
          		  mapplace.icon,
                new google.maps.Size(71, 71),
                new google.maps.Point(0, 0),
                new google.maps.Point(17, 34),
                new google.maps.Size(35, 35));
            marker.setIcon(image);
            marker.setPosition(mapplace.geometry.location);        

            var address = '';
            if (mapplace.address_components) {
              address = [
                (mapplace.address_components[0] &amp;&amp; mapplace.address_components[0].short_name || ''),
                (mapplace.address_components[1] &amp;&amp; mapplace.address_components[1].short_name || ''),
                (mapplace.address_components[2] &amp;&amp; mapplace.address_components[2].short_name || '')
              ].join(' ');
            }
            getLatLng(address); //getting coordinates of address
            infowindow.setContent('<div><strong>' + mapplace.name + '</strong></div>' + address);
            infowindow.open(map, marker);
          });

          autocomplete.setTypes(['geocode']);
          
          if (#{travelRouteBean.routeView}) {
        	  displayRoute();  
          }            
      }
      
      google.maps.event.addDomListener(window, 'load', initialize);
           
      function displayRoute() {
          var mapOptions = {
                  zoom: 7,
                  mapTypeId: google.maps.MapTypeId.ROADMAP
                };
          
 	     var directionsService = new google.maps.DirectionsService();
	     directionsDisplay = new google.maps.DirectionsRenderer();

	     map = new google.maps.Map(document.getElementById('map_canvas'), mapOptions);
	     
	     directionsDisplay.setMap(map);
	     //directionsDisplay.setPanel(document.getElementById('panel'));
	     var request = {
	       origin: 'Chicago', 
	       destination: 'New York',
	       travelMode: google.maps.DirectionsTravelMode.DRIVING
	     };

	     directionsService.route(request, function(response, status) {
	       if (status == google.maps.DirectionsStatus.OK) {
	         directionsDisplay.setDirections(response);
	       }
	     });  
      }
    </script>    	   
    </h:head>

    <h:body>
    <h:form prependId="false"> 
      
    	<h:panelGrid columns="2" columnClasses="top_column_left, top_column_right"  style="width: 100%">     		  	
      		<h:commandLink action="travel?faces-redirect=true" value="#{messagesSource.getLocaleValue
      			(&quot;navigation.back&quot;, null)}" />
      			        			
      		<a href="#{request.contextPath}/j_spring_security_logout">
	      		#{messagesSource.getLocaleValue("navigation.logout", null)} </a>
		</h:panelGrid>
		
		<h1 align="center"> #{messagesSource.getLocaleValue("travelroute.caption", null)} </h1>   
		
		<rich:panel header="#{messagesSource.getLocaleValue(&quot;travelroute.panel.header&quot;, null)}">
			<h:panelGrid columns="5" >						
				<h:inputText id="searchTextField" style="width:300px" value="#{travelRouteBean.placeName}" />			
				<h:commandButton value="#{messagesSource.getLocaleValue(&quot;common.add&quot;, null)}" 
					action="#{travelRouteBean.add}" style="width:100px" /> 
				<h:inputHidden id="edlatitude" style="width:100px" value="#{travelRouteBean.latitude}"/>	
				<h:inputHidden id="edLongitude" style="width:100px" value="#{travelRouteBean.longitude}"/>
	   		</h:panelGrid>
   		</rich:panel>
   		
    	<div id="map_canvas"></div>

   		<br />
   			<h:commandButton value="#{messagesSource.getLocaleValue(&quot;travelroute.get.directions&quot;, null)}" 
				action="#{travelRouteBean.setRouteView(true)}" style="width:200px" /> 
   		<br />
		<rich:dataTable 
		  id="routeTable"
		  value="#{travelRouteBean.findByIdProfile()}"
		  var="travelRoute" rows="10" rowKeyVar="rowkey"
		  columnClasses="column-right,none,column-center">
		  
			 <rich:column style="width:80px">
			    <f:facet name="header">
			      #{messagesSource.getLocaleValue("travelroute.order", null)}
			    </f:facet>
			    <h:outputText value = "#{rowkey + 1}" />		
			 </rich:column>	  
			 
			 <rich:column>
			    <f:facet name="header">
			      #{messagesSource.getLocaleValue("travelroute.place", null)}
			    </f:facet>
			    <h:outputText value = "#{travelRoute.place.name}" />		
			 </rich:column>	 
			 
			 <rich:column>
			    <f:facet name="header">
			      #{messagesSource.getLocaleValue("common.parameters", null)}
			    </f:facet>
			    <h:commandButton value="&lt;" action="#{travelRouteBean.moveUp(travelRoute.idTravelRoute)}" />	
			    <h:commandButton value="&gt;" action="#{travelRouteBean.moveDown(travelRoute.idTravelRoute)}" />
				<h:commandButton value="X" action="#{travelRouteServiceImpl.remove(travelRoute.idTravelRoute)}" />			    	  
			 </rich:column>		
			 
			 <f:facet name="footer">
		        <rich:dataScroller align="left" for="routeTable" />	
		    </f:facet>				 		 		 		
	     </rich:dataTable>  	
    </h:form>
    </h:body>
</html>  